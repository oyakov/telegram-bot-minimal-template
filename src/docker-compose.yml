  services:
    bot:
      build: .
      depends_on:
        db:
          condition: service_healthy
      env_file:
        - .env.prod
      ports:
        - "8000:8000" # Expose the port 8000
      networks:
        - bot_network
      volumes:
        - ./data:/app/data
        - ./logs:/app/logs
        - ./logs/config/logging.ini:/app/logging.ini
      environment:
        - LOGGING_CONFIG=/app/logging.ini
    db:
      image: postgres:13
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: dGhpcyBpcyBhIGZha2Ugc2VjcmV0
        POSTGRES_DB: postgres
        UMASK:  0027  # Sets the default permission for new files to 750
      ports:
        - "5432:5432"
      volumes:
        - pgdata:/var/lib/postgresql/data
        - ./logs/db:/var/log/postgresql # Mount the host log directory to the PostgreSQL log directory
        - ./install/postgres/postgresql.conf:/etc/postgresql/postgresql.conf # Mount the custom PostgreSQL configuration
      command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'  # Use the custom config file
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
        - bot_network

  # ElasticSearch is removed for now
    elasticsearch:
      image: elasticsearch:8.14.0
      container_name: es01
      environment:
        - node.name=es01
        - cluster.name=es-docker-cluster
        - bootstrap.memory_lock=true
        - discovery.type=single-node
        - xpack.security.transport.ssl.enabled=false
        - xpack.security.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ports:
        - "9200:9200"
      volumes:
          - esdata:/usr/share/elasticsearch/data
          - ./install/elastic/mappings:/usr/share/elasticsearch/mappings
      networks:
        - bot_network
      healthcheck:
        test: ["CMD-SHELL", "curl -s http://elasticsearch:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
        interval: 30s
        timeout: 10s
        retries: 5

    elasticsearch-init:
      image: appropriate/curl
      depends_on:
        - elasticsearch
      volumes:
        - ./install/elastic/mappings:/usr/share/elasticsearch/mappings
        - ./install/elastic/init_indices.sh:/init_indices.sh
      entrypoint: ["/bin/sh", "/init_indices.sh"]
      networks:
        - bot_network

    grafana:
      image: grafana/grafana:latest
      ports:
        - "3000:3000"
      volumes:
        - grafana-data:/var/lib/grafana
      networks:
        - bot_network
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=0l0l0sha
      logging:
        driver: "none"

  volumes:
    pgdata:
    esdata:
    grafana-data:

  networks:
    bot_network:
      external: false
